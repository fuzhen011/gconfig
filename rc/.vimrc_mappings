""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"                   --- Vim Runtime Configuration File ---                   "
"                   ---          Key Mappings          ---                   "
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""

nnoremap <leader>lo :lopen<CR>	"open locationlist
nnoremap <leader>lc :lclose<CR>	"close locationlist
nnoremap <leader>qo :copen<CR>	"open QuickFix
nnoremap <leader>qc :cclose<CR>	"close QuickFix

" Load the Silabs' uncrustify configuration
nnoremap <leader>ss :let g:ale_c_uncrustify_options = '-c ~/.uncrustify.cfg -l C --replace'<CR>
" Load the Zephyr's uncrustify configuration
nnoremap <leader>sd :let g:ale_c_uncrustify_options = '-c ~/work/repos/zephyrproject/zephyr/.uncrustify.cfg -l C --replace'<CR>

noremap <Leader>re :norm yiw<CR>:%s/<C-R>"/
noremap <Leader>f0 o#if 0<ESC>
noremap <Leader>fe o#endif<ESC>

noremap <C-l>	<C-w>l
noremap <C-h>	<C-w>h
noremap <C-j>	<C-w>j
noremap <C-k>	<C-w>k

nnoremap <silent> <leader>am I[comment]: # ""<ESC>i
nnoremap <silent> <leader>dp I/******************************************************************<CR><CR>***************************************************************/<ESC>ka<SPACE>
nnoremap <silent> <leader>de I/*  */<ESC>2hi**Delimiter** ---

"设置切换Buffer快捷键"
nnoremap <silent> <ESC>c :bd<CR>
nnoremap <silent> <ESC>q :bp<CR>
nnoremap <silent> <ESC>e :bn<CR>
nnoremap <silent> <ESC>n :new<CR>
nnoremap <silent> <ESC>t :tabnew<CR>
nnoremap <silent> <ESC>o :tabp<CR>
nnoremap <silent> <ESC>p :tabn<CR>
nnoremap <silent> <ESC>1 :b1<CR>
nnoremap <silent> <ESC>2 :b2<CR>
nnoremap <silent> <ESC>3 :b3<CR>
nnoremap <silent> <ESC>4 :b4<CR>
nnoremap <silent> <ESC>5 :b5<CR>
nnoremap <silent> <ESC>6 :b6<CR>
nnoremap <silent> <ESC>7 :b7<CR>
nnoremap <silent> <ESC>8 :b8<CR>
nnoremap <silent> <ESC>9 :b9<CR>
nnoremap <silent> <ESC>0 :b10<CR>

nnoremap <leader>w :w<CR>
vmap v <Plug>(expand_region_expand)
vmap <C-v> <Plug>(expand_region_shrink)
vnoremap <silent> y y`]
vnoremap <silent> p p`]
nnoremap <silent> p p`]
" vp doesn't replace paste buffer
function! RestoreRegister()
    let @" = s:restore_reg
    return ''
endfunction
function! s:Repl()
    let s:restore_reg = @"
    return "p@=RestoreRegister()\<cr>"
endfunction
vmap <silent> <expr> p <sid>Repl()

" Enter License
"
"
"
let g:silabs_license = "Copyright (C) \<enter>\<enter>"
let g:silabs_license = g:silabs_license . "This program is free software; you can redistribute it and/or\<enter>"
let g:silabs_license = g:silabs_license . "modify it under the terms of the GNU General Public License\<enter>"
let g:silabs_license = g:silabs_license . "as published by the Free Software Foundation; either version 2\<enter>"
let g:silabs_license = g:silabs_license . "of the License, or (at your option) any later version.\<enter>\<enter>"
let g:silabs_license = g:silabs_license . "This program is distributed in the hope that it will be useful,\<enter>"
let g:silabs_license = g:silabs_license . "but WITHOUT ANY WARRANTY; without even the implied warranty of\<enter>"
let g:silabs_license = g:silabs_license . "MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\<enter>"
let g:silabs_license = g:silabs_license . "GNU General Public License for more details.\<enter>\<enter>"
let g:silabs_license = g:silabs_license . "You should have received a copy of the GNU General Public License\<enter>"
let g:silabs_license = g:silabs_license . "along with this program; if not, write to the Free Software\<enter>"
let g:silabs_license = g:silabs_license . "Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.\<enter>"

" function! test_license()
" endfunction
